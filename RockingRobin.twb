<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook include-phone-layouts='false' original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IncludePhoneLayoutsOptOut />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='RockingRobin_15908123875900' path='/workbooks' revision='4.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
      <format attr='animation-style' value='as-synced' />
      <format attr='animation-duration' value='1' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='CompareB' datatype='string' name='[CompareA (copy)_902971782764965897]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <aliases>
          <alias key='&quot;Budget COGS&quot;' value='Budget Cost Of Goods' />
          <alias key='&quot;COGS&quot;' value='Cost Of Goods' />
          <alias key='&quot;Marketing&quot;' value='Marketing Cost' />
        </aliases>
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Margin&quot;' />
          <member alias='Cost Of Goods' value='&quot;COGS&quot;' />
          <member alias='Marketing Cost' value='&quot;Marketing&quot;' />
          <member value='&quot;Total Expenses&quot;' />
          <member alias='Budget Cost Of Goods' value='&quot;Budget COGS&quot;' />
          <member value='&quot;Budget Margin&quot;' />
          <member value='&quot;Budget Profit&quot;' />
          <member value='&quot;Budget Sales&quot;' />
        </members>
      </column>
      <column caption='ProductTypeParameter' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Beverages&quot;'>
        <calculation class='tableau' formula='&quot;Beverages&quot;' />
        <members />
      </column>
      <column caption='ProductTypeParam' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Beverages&quot;'>
        <calculation class='tableau' formula='&quot;Beverages&quot;' />
        <members>
          <member value='&quot;All&quot;' />
          <member value='&quot;Beverages&quot;' />
          <member value='&quot;Cake&quot;' />
          <member value='&quot;Combo&quot;' />
          <member value='&quot;Cups &amp; Cones&quot;' />
          <member value='&quot;Dessert&quot;' />
          <member value='&quot;Sundae&quot;' />
        </members>
      </column>
      <column caption='TopBottomProductParam' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bottom 5&quot;'>
        <calculation class='tableau' formula='&quot;Bottom 5&quot;' />
        <members>
          <member value='&quot;All&quot;' />
          <member value='&quot;Top 5&quot;' />
          <member value='&quot;Bottom 5&quot;' />
        </members>
      </column>
      <column caption='FilterParameter' datatype='string' name='[Parameter 3]' param-domain-type='any' role='measure' type='nominal' value='&quot;California&quot;'>
        <calculation class='tableau' formula='&quot;California&quot;' />
      </column>
      <column caption='CompareA' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
        <calculation class='tableau' formula='&quot;Profit&quot;' />
        <aliases>
          <alias key='&quot;Budget COGS&quot;' value='Budget Cost Of Goods' />
          <alias key='&quot;COGS&quot;' value='Cost Of Goods' />
          <alias key='&quot;Marketing&quot;' value='Marketing Cost' />
        </aliases>
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Margin&quot;' />
          <member alias='Cost Of Goods' value='&quot;COGS&quot;' />
          <member alias='Marketing Cost' value='&quot;Marketing&quot;' />
          <member value='&quot;Total Expenses&quot;' />
          <member alias='Budget Cost Of Goods' value='&quot;Budget COGS&quot;' />
          <member value='&quot;Budget Margin&quot;' />
          <member value='&quot;Budget Profit&quot;' />
          <member value='&quot;Budget Sales&quot;' />
        </members>
      </column>
      <column caption='State Parameter' datatype='string' name='[State Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;California&quot;'>
        <calculation class='tableau' formula='&quot;California&quot;' />
        <members />
      </column>
      <column caption='TopBottomStateParam' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <members>
          <member value='&quot;All&quot;' />
          <member value='&quot;Top 5&quot;' />
          <member value='&quot;Bottom 5&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='FactTable+ (RockingRobin)' inline='true' name='federated.07sep7i1jhvdc61e1wqsp0azkwht' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='RockingRobin' name='excel-direct.0hzfufj1qh173y1dcvlw91beo79s'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Mama/Documents/Deakin DataScience/DescriptiveStatistic/Assignments/Assignment3/RockingRobin.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0hzfufj1qh173y1dcvlw91beo79s' name='FactTable' table='[FactTable$]' type='table'>
          <columns gridOrigin='A1:N4249:no:A1:N4249:0' header='yes' outcome='6'>
            <column datatype='integer' name='Profit' ordinal='0' />
            <column datatype='integer' name='Margin' ordinal='1' />
            <column datatype='integer' name='Sales' ordinal='2' />
            <column datatype='integer' name='COGS' ordinal='3' />
            <column datatype='integer' name='Total Expenses' ordinal='4' />
            <column datatype='integer' name='Marketing' ordinal='5' />
            <column datatype='integer' name='Inventory' ordinal='6' />
            <column datatype='integer' name='Budget Profit' ordinal='7' />
            <column datatype='integer' name='Budget COGS' ordinal='8' />
            <column datatype='integer' name='Budget Margin' ordinal='9' />
            <column datatype='integer' name='Budget Sales' ordinal='10' />
            <column datatype='string' name='Area Code' ordinal='11' />
            <column datatype='integer' name='ProductID' ordinal='12' />
            <column datatype='date' name='Date' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0hzfufj1qh173y1dcvlw91beo79s' name='FactTable' table='[FactTable$]' type='table'>
            <columns gridOrigin='A1:N4249:no:A1:N4249:0' header='yes' outcome='6'>
              <column datatype='integer' name='Profit' ordinal='0' />
              <column datatype='integer' name='Margin' ordinal='1' />
              <column datatype='integer' name='Sales' ordinal='2' />
              <column datatype='integer' name='COGS' ordinal='3' />
              <column datatype='integer' name='Total Expenses' ordinal='4' />
              <column datatype='integer' name='Marketing' ordinal='5' />
              <column datatype='integer' name='Inventory' ordinal='6' />
              <column datatype='integer' name='Budget Profit' ordinal='7' />
              <column datatype='integer' name='Budget COGS' ordinal='8' />
              <column datatype='integer' name='Budget Margin' ordinal='9' />
              <column datatype='integer' name='Budget Sales' ordinal='10' />
              <column datatype='string' name='Area Code' ordinal='11' />
              <column datatype='integer' name='ProductID' ordinal='12' />
              <column datatype='date' name='Date' ordinal='13' />
            </columns>
          </relation>
          <relation connection='excel-direct.0hzfufj1qh173y1dcvlw91beo79s' name='Location' table='[Location$]' type='table'>
            <columns gridOrigin='A1:D157:no:A1:D157:0' header='yes' outcome='6'>
              <column datatype='string' name='Area Code' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='Market' ordinal='2' />
              <column datatype='string' name='Market Size' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0hzfufj1qh173y1dcvlw91beo79s' name='StateAbb' table='[StateAbb$]' type='table'>
            <columns gridOrigin='A1:B53:no:A1:B53:0' header='yes' outcome='6'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='string' name='Abbreviation' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0hzfufj1qh173y1dcvlw91beo79s' name='Product' table='[Product$]' type='table'>
            <columns gridOrigin='A1:C14:no:A1:C14:0' header='yes' outcome='6'>
              <column datatype='integer' name='ProductID' ordinal='0' />
              <column datatype='string' name='Product' ordinal='1' />
              <column datatype='string' name='Product Type' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Abbreviation]' value='[StateAbb].[Abbreviation]' />
          <map key='[Area Code (Location)]' value='[Location].[Area Code]' />
          <map key='[Area Code]' value='[FactTable].[Area Code]' />
          <map key='[Budget COGS]' value='[FactTable].[Budget COGS]' />
          <map key='[Budget Margin]' value='[FactTable].[Budget Margin]' />
          <map key='[Budget Profit]' value='[FactTable].[Budget Profit]' />
          <map key='[Budget Sales]' value='[FactTable].[Budget Sales]' />
          <map key='[COGS]' value='[FactTable].[COGS]' />
          <map key='[Date]' value='[FactTable].[Date]' />
          <map key='[Inventory]' value='[FactTable].[Inventory]' />
          <map key='[Margin]' value='[FactTable].[Margin]' />
          <map key='[Market Size]' value='[Location].[Market Size]' />
          <map key='[Market]' value='[Location].[Market]' />
          <map key='[Marketing]' value='[FactTable].[Marketing]' />
          <map key='[Product Type]' value='[Product].[Product Type]' />
          <map key='[ProductID (Product)]' value='[Product].[ProductID]' />
          <map key='[ProductID]' value='[FactTable].[ProductID]' />
          <map key='[Product]' value='[Product].[Product]' />
          <map key='[Profit]' value='[FactTable].[Profit]' />
          <map key='[Sales]' value='[FactTable].[Sales]' />
          <map key='[State (StateAbb)]' value='[StateAbb].[State]' />
          <map key='[State]' value='[Location].[State]' />
          <map key='[Total Expenses]' value='[FactTable].[Total Expenses]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FactTable]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N4249:no:A1:N4249:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Location]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D157:no:A1:D157:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[StateAbb]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B53:no:A1:B53:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Product]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C14:no:A1:C14:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COGS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COGS]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>COGS</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProductID]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>ProductID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[FactTable]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area Code (Location)]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location_405F9E56791243118C1A95070DA79C74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location_405F9E56791243118C1A95070DA79C74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location_405F9E56791243118C1A95070DA79C74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location_405F9E56791243118C1A95070DA79C74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (StateAbb)]</local-name>
            <parent-name>[StateAbb]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Abbreviation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Abbreviation]</local-name>
            <parent-name>[StateAbb]</parent-name>
            <remote-alias>Abbreviation</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProductID (Product)]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>ProductID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Product_3985B3BC7C324A8B8F014FD88CA209D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Product_3985B3BC7C324A8B8F014FD88CA209D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Product_3985B3BC7C324A8B8F014FD88CA209D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Budget Margin:qk]&quot;' value='Budget Margin' />
          <alias key='&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Budget Profit:qk]&quot;' value='Budget Profit' />
          <alias key='&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Budget Sales:qk]&quot;' value='Budget Sales' />
          <alias key='&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Marketing:qk]&quot;' value='Marketing' />
          <alias key='&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Profit:qk]&quot;' value='Profit' />
          <alias key='&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Sales:qk]&quot;' value='Sales' />
          <alias key='&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Total Expenses:qk]&quot;' value='Expenses' />
        </aliases>
      </column>
      <column datatype='string' name='[Abbreviation]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='string' name='[Area Code (Location)]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='string' name='[Area Code (group)]' role='dimension' semantic-role='[AreaCode].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Area Code]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;206&quot;'>
            <value>&quot;206&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' default-format='*000' name='[Area Code]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='integer' name='[Budget Margin]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Budget Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Budget Sales]' role='measure' type='quantitative' />
      <column caption='TopBottomProductCalc' datatype='boolean' name='[Calculation_1089026742058356740]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &apos;Bottom 5&apos; THEN&#13;&#10;RANK(SUM([Sales]), &apos;asc&apos;) &lt;= 5 &#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Top 5&apos; THEN&#13;&#10;RANK(SUM([Sales]), &apos;desc&apos;) &lt;= 5 &#13;&#10;ELSE RANK(SUM([Sales]), &apos;desc&apos;) &gt; 0 &#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='netProfitMargin1' datatype='real' name='[Calculation_1526720332454821888]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
      </column>
      <column caption='percentageBar' datatype='real' name='[Calculation_1580763527454572544]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_902971782763782152]/[valueA (copy)_902971782782119946]*100' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_467529993097342976]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='All States (1)' datatype='string' name='[Calculation_467529993153331206 1]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[State Parameter 1]' />
      </column>
      <column caption='All States' datatype='string' name='[Calculation_467529993153331206]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[State Parameter]' />
      </column>
      <column caption='Type' datatype='string' name='[Calculation_85568449562619913]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Product Type]' />
      </column>
      <column caption='StateTop' datatype='string' name='[Calculation_902971782698938370]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[State]' />
      </column>
      <column caption='A' datatype='integer' name='[Calculation_902971782763782152]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 4] &#13;&#10;WHEN &apos;Margin&apos; THEN&#13;&#10;    SUM([Margin])&#13;&#10;WHEN &apos;Sales&apos; THEN&#13;&#10;    SUM([Sales])&#13;&#10;WHEN &apos;Profit&apos; THEN&#13;&#10;    SUM([Profit])&#13;&#10;WHEN &apos;COGS&apos; THEN&#13;&#10;    SUM([COGS])&#13;&#10;WHEN &apos;Marketing&apos; THEN&#13;&#10;    SUM([Marketing])&#13;&#10;WHEN &apos;Total Expenses&apos; THEN&#13;&#10;    SUM([Total Expenses])&#13;&#10;WHEN &apos;Budget COGS&apos; THEN&#13;&#10;    SUM([Budget COGS])&#13;&#10;WHEN &apos;Budget Margin&apos; THEN&#13;&#10;    SUM([Budget Margin]) &#13;&#10;WHEN &apos;Budget Profit&apos; THEN&#13;&#10;    SUM([Budget Profit]) &#13;&#10;ELSE&#13;&#10;    SUM([Budget Sales])&#13;&#10;END' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Margin]' role='measure' type='quantitative' />
      <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
      <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ProductID (Product)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ProductID]' role='dimension' type='ordinal' />
      <column caption='Product (Product)' datatype='string' name='[Product]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State (StateAbb)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='TopBottomStateCalc' datatype='boolean' name='[TopBottomProductCalc (copy)_612771081616945153]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[State Parameter] = &apos;Bottom 5&apos; THEN&#13;&#10;RANK(SUM([Profit]), &apos;asc&apos;) &lt;= 5 &#13;&#10;ELSEIF [Parameters].[State Parameter] = &apos;Top 5&apos; THEN&#13;&#10;RANK(SUM([Profit]), &apos;desc&apos;) &lt;= 5 ELSE&#13;&#10;RANK(SUM([Profit]), &apos;desc&apos;) &gt; 0&#13;&#10;END'>
          <table-calc ordering-field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Calculation_467529993153331206]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='FactTable' datatype='table' name='[__tableau_internal_object_id__].[FactTable_CB35921C568C42BCB744B12876F02688]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Location' datatype='table' name='[__tableau_internal_object_id__].[Location_405F9E56791243118C1A95070DA79C74]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Product' datatype='table' name='[__tableau_internal_object_id__].[Product_3985B3BC7C324A8B8F014FD88CA209D4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='StateAbb' datatype='table' name='[__tableau_internal_object_id__].[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0]' role='measure' type='quantitative' />
      <column caption='grossProfitMargin' datatype='real' name='[grossProfitMargin (copy)_1526720332457025537]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Sales])-SUM([COGS]))/SUM([Sales])*100' />
      </column>
      <column caption='B' datatype='integer' name='[valueA (copy)_902971782782119946]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[CompareA (copy)_902971782764965897] &#13;&#10;WHEN &apos;Margin&apos; THEN&#13;&#10;    SUM([Margin])&#13;&#10;WHEN &apos;Sales&apos; THEN&#13;&#10;    SUM([Sales])&#13;&#10;WHEN &apos;Profit&apos; THEN&#13;&#10;    SUM([Profit])&#13;&#10;WHEN &apos;COGS&apos; THEN&#13;&#10;    SUM([COGS])&#13;&#10;WHEN &apos;Marketing&apos; THEN&#13;&#10;    SUM([Marketing])&#13;&#10;WHEN &apos;Total Expenses&apos; THEN&#13;&#10;    SUM([Total Expenses])&#13;&#10;WHEN &apos;Budget COGS&apos; THEN&#13;&#10;    SUM([Budget COGS])&#13;&#10;WHEN &apos;Budget Margin&apos; THEN&#13;&#10;    SUM([Budget Margin]) &#13;&#10;WHEN &apos;Budget Profit&apos; THEN&#13;&#10;    SUM([Budget Profit]) &#13;&#10;ELSE&#13;&#10;    SUM([Budget Sales])&#13;&#10;END' />
      </column>
      <column-instance column='[Market Size]' derivation='Attribute' name='[attr:Market Size:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Type]' derivation='Attribute' name='[attr:Product Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Budget Margin]' derivation='Avg' name='[avg:Budget Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Profit]' derivation='Avg' name='[avg:Budget Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Sales]' derivation='Avg' name='[avg:Budget Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Margin]' derivation='Avg' name='[avg:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketing]' derivation='Avg' name='[avg:Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Expenses]' derivation='Avg' name='[avg:Total Expenses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Area Code (Location)]' derivation='None' name='[none:Area Code (Location):nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Budget Margin]' derivation='Sum' name='[sum:Budget Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Profit]' derivation='Sum' name='[sum:Budget Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Sales]' derivation='Sum' name='[sum:Budget Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Margin]' derivation='Sum' name='[sum:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Abbreviation,State)' hidden='true' name='[Action (Abbreviation,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Abbreviation]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Area Code (group),Area Code,State)' hidden='true' name='[Action (Area Code (group),Area Code,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area Code (group)]' />
          <groupfilter function='level-members' level='[Area Code]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Area Code)' hidden='true' name='[Action (Area Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area Code]' />
        </groupfilter>
      </group>
      <group caption='Action (Area Code,Market Size)' hidden='true' name='[Action (Area Code,Market Size)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area Code]' />
          <groupfilter function='level-members' level='[Market Size]' />
        </groupfilter>
      </group>
      <group caption='Action (Area Code,State)' hidden='true' name='[Action (Area Code,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Area Code]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Prod,Type,Product Type) (1)' hidden='true' name='[Action (Prod,Type,Product Type) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_85568449556279303 1]' />
          <groupfilter function='level-members' level='[Calculation_85568449562619913]' />
          <groupfilter function='level-members' level='[Product Type]' />
        </groupfilter>
      </group>
      <group caption='Action (Prod,Type,Product Type)' hidden='true' name='[Action (Prod,Type,Product Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_85568449556279303]' />
          <groupfilter function='level-members' level='[Calculation_85568449562619913]' />
          <groupfilter function='level-members' level='[Product Type]' />
        </groupfilter>
      </group>
      <group caption='Action (Product (Product))' hidden='true' name='[Action (Product (Product))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Type,Product (Product))' hidden='true' name='[Action (Product Type,Product (Product))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Type]' />
          <groupfilter function='level-members' level='[Product]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (StateAlias)' hidden='true' name='[Action (StateAlias)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_85568449621106701]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (stateCalc,State)' hidden='true' name='[Action (stateCalc,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_85568449291247618]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Top 5 Areas' name='[Top 5 Areas]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Area Code (Location)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Bottom 5 states' name='[Top 5 states (copy 2)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter expression='[Parameters].[Parameter 2] = &apos;Top 5&apos;' function='filter' user:ui-marker='filter-by'>
              <groupfilter from='&quot;California&quot;' function='range' level='[State]' to='&quot;Wisconsin&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 5 states' name='[Top n by parameter Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter expression='[Parameters].[Parameter 2] = &apos;Top 5&apos;' function='filter' user:ui-marker='filter-by'>
              <groupfilter from='&quot;California&quot;' function='range' level='[State]' to='&quot;Wisconsin&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top5ProductSet' name='[Top5ProductSet]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter expression='[Parameters].[Parameter 2] = &apos;Top 5&apos;' function='filter' user:ui-marker='filter-by'>
              <groupfilter from='&quot;Banana Slipt&quot;' function='range' level='[Product]' to='&quot;Ultimate Sundae&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/Mama/Documents/Deakin DataScience/DescriptiveStatistic/Assignments/Assignment3/RockingRobin.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/31/2020 11:01:31 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='FactTable_CB35921C568C42BCB744B12876F02688' table='[Extract].[FactTable_CB35921C568C42BCB744B12876F02688]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='FactTable_CB35921C568C42BCB744B12876F02688' table='[Extract].[FactTable_CB35921C568C42BCB744B12876F02688]' type='table' />
            <relation name='Location_405F9E56791243118C1A95070DA79C74' table='[Extract].[Location_405F9E56791243118C1A95070DA79C74]' type='table' />
            <relation name='StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0' table='[Extract].[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0]' type='table' />
            <relation name='Product_3985B3BC7C324A8B8F014FD88CA209D4' table='[Extract].[Product_3985B3BC7C324A8B8F014FD88CA209D4]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Abbreviation]' value='[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0].[Abbreviation]' />
            <map key='[Area Code (Location)]' value='[Location_405F9E56791243118C1A95070DA79C74].[Area Code]' />
            <map key='[Area Code]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Area Code]' />
            <map key='[Budget COGS]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Budget COGS]' />
            <map key='[Budget Margin]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Budget Margin]' />
            <map key='[Budget Profit]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Budget Profit]' />
            <map key='[Budget Sales]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Budget Sales]' />
            <map key='[COGS]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[COGS]' />
            <map key='[Date]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Date]' />
            <map key='[Inventory]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Inventory]' />
            <map key='[Margin]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Margin]' />
            <map key='[Market Size]' value='[Location_405F9E56791243118C1A95070DA79C74].[Market Size]' />
            <map key='[Market]' value='[Location_405F9E56791243118C1A95070DA79C74].[Market]' />
            <map key='[Marketing]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Marketing]' />
            <map key='[Product Type]' value='[Product_3985B3BC7C324A8B8F014FD88CA209D4].[Product Type]' />
            <map key='[ProductID (Product)]' value='[Product_3985B3BC7C324A8B8F014FD88CA209D4].[ProductID]' />
            <map key='[ProductID]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[ProductID]' />
            <map key='[Product]' value='[Product_3985B3BC7C324A8B8F014FD88CA209D4].[Product]' />
            <map key='[Profit]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Profit]' />
            <map key='[Sales]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Sales]' />
            <map key='[State (StateAbb)]' value='[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0].[State]' />
            <map key='[State]' value='[Location_405F9E56791243118C1A95070DA79C74].[State]' />
            <map key='[Total Expenses]' value='[FactTable_CB35921C568C42BCB744B12876F02688].[Total Expenses]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='FactTable+ (RockingRobin)' increment-value='%null%' refresh-type='create' rows-inserted='4469' timestamp-start='2020-05-31 11:01:31.052' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>0</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>388</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Margin</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Margin]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Margin</remote-alias>
              <ordinal>1</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>283</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>2</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>415</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COGS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[COGS]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>COGS</remote-alias>
              <ordinal>3</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Expenses</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total Expenses]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Total Expenses</remote-alias>
              <ordinal>4</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>154</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Marketing</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Marketing]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Marketing</remote-alias>
              <ordinal>5</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Inventory</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Inventory]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Inventory</remote-alias>
              <ordinal>6</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>616</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Budget Profit</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Budget Profit]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Budget Profit</remote-alias>
              <ordinal>7</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>79</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Budget COGS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Budget COGS]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Budget COGS</remote-alias>
              <ordinal>8</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Budget Margin</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Budget Margin]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Budget Margin</remote-alias>
              <ordinal>9</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Budget Sales</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Budget Sales]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Budget Sales</remote-alias>
              <ordinal>10</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>91</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Area Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Area Code]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Area Code</remote-alias>
              <ordinal>11</ordinal>
              <family>FactTable</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>167</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ProductID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ProductID]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>ProductID</remote-alias>
              <ordinal>12</ordinal>
              <family>FactTable</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[FactTable_CB35921C568C42BCB744B12876F02688]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>13</ordinal>
              <family>FactTable</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FactTable_CB35921C568C42BCB744B12876F02688]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Area Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Area Code (Location)]</local-name>
              <parent-name>[Location_405F9E56791243118C1A95070DA79C74]</parent-name>
              <remote-alias>Area Code</remote-alias>
              <ordinal>14</ordinal>
              <family>Location</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location_405F9E56791243118C1A95070DA79C74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Location_405F9E56791243118C1A95070DA79C74]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>15</ordinal>
              <family>Location</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location_405F9E56791243118C1A95070DA79C74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Market</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Market]</local-name>
              <parent-name>[Location_405F9E56791243118C1A95070DA79C74]</parent-name>
              <remote-alias>Market</remote-alias>
              <ordinal>16</ordinal>
              <family>Location</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location_405F9E56791243118C1A95070DA79C74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Market Size</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Market Size]</local-name>
              <parent-name>[Location_405F9E56791243118C1A95070DA79C74]</parent-name>
              <remote-alias>Market Size</remote-alias>
              <ordinal>17</ordinal>
              <family>Location</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location_405F9E56791243118C1A95070DA79C74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State (StateAbb)]</local-name>
              <parent-name>[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>18</ordinal>
              <family>StateAbb</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Abbreviation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Abbreviation]</local-name>
              <parent-name>[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0]</parent-name>
              <remote-alias>Abbreviation</remote-alias>
              <ordinal>19</ordinal>
              <family>StateAbb</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ProductID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ProductID (Product)]</local-name>
              <parent-name>[Product_3985B3BC7C324A8B8F014FD88CA209D4]</parent-name>
              <remote-alias>ProductID</remote-alias>
              <ordinal>20</ordinal>
              <family>Product</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Product_3985B3BC7C324A8B8F014FD88CA209D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product]</local-name>
              <parent-name>[Product_3985B3BC7C324A8B8F014FD88CA209D4]</parent-name>
              <remote-alias>Product</remote-alias>
              <ordinal>21</ordinal>
              <family>Product</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Product_3985B3BC7C324A8B8F014FD88CA209D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Type]</local-name>
              <parent-name>[Product_3985B3BC7C324A8B8F014FD88CA209D4]</parent-name>
              <remote-alias>Product Type</remote-alias>
              <ordinal>22</ordinal>
              <family>Product</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Product_3985B3BC7C324A8B8F014FD88CA209D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Market Size:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Major Market&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Small Market&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area Code (Location):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;312&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;970&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;702&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;563&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;435&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dessert&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Cups &amp; Cones&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Combo&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Sundae&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cake&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Regular Sundae&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Banana Slipt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ultimate Sundae&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Sticky Date Pudding&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tea/Coffee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Freshly Baked Waffle Cone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgian Waffle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kid&apos;s Cone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chocolate Soufflé&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Milkshakes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Choc Brownie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Take home pack&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cake&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Budget Margin:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Budget Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Margin:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Budget Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Margin:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Market Size:nk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Marketing:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Marketing:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Budget Profit:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Budget Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[avg:Total Expenses:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Budget Margin:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Market Size:nk]' type='palette'>
            <map to='#e15759'>
              <bucket>&quot;Major Market&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Small Market&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Product Type:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Cups &amp; Cones&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Combo&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Sundae&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cake&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Dessert&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[AreaCode].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='CompareB' datatype='string' name='[CompareA (copy)_902971782764965897]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
          <aliases>
            <alias key='&quot;Budget COGS&quot;' value='Budget Cost Of Goods' />
            <alias key='&quot;COGS&quot;' value='Cost Of Goods' />
            <alias key='&quot;Marketing&quot;' value='Marketing Cost' />
          </aliases>
        </column>
        <column caption='TopBottomProductParam' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bottom 5&quot;'>
          <calculation class='tableau' formula='&quot;Bottom 5&quot;' />
        </column>
        <column caption='CompareA' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
          <aliases>
            <alias key='&quot;Budget COGS&quot;' value='Budget Cost Of Goods' />
            <alias key='&quot;COGS&quot;' value='Cost Of Goods' />
            <alias key='&quot;Marketing&quot;' value='Marketing Cost' />
          </aliases>
        </column>
        <column caption='State Parameter' datatype='string' name='[State Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;California&quot;'>
          <calculation class='tableau' formula='&quot;California&quot;' />
        </column>
        <column caption='TopBottomStateParam' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='FactTable' id='FactTable_CB35921C568C42BCB744B12876F02688'>
            <properties context=''>
              <relation connection='excel-direct.0hzfufj1qh173y1dcvlw91beo79s' name='FactTable' table='[FactTable$]' type='table'>
                <columns gridOrigin='A1:N4249:no:A1:N4249:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Profit' ordinal='0' />
                  <column datatype='integer' name='Margin' ordinal='1' />
                  <column datatype='integer' name='Sales' ordinal='2' />
                  <column datatype='integer' name='COGS' ordinal='3' />
                  <column datatype='integer' name='Total Expenses' ordinal='4' />
                  <column datatype='integer' name='Marketing' ordinal='5' />
                  <column datatype='integer' name='Inventory' ordinal='6' />
                  <column datatype='integer' name='Budget Profit' ordinal='7' />
                  <column datatype='integer' name='Budget COGS' ordinal='8' />
                  <column datatype='integer' name='Budget Margin' ordinal='9' />
                  <column datatype='integer' name='Budget Sales' ordinal='10' />
                  <column datatype='string' name='Area Code' ordinal='11' />
                  <column datatype='integer' name='ProductID' ordinal='12' />
                  <column datatype='date' name='Date' ordinal='13' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='FactTable_CB35921C568C42BCB744B12876F02688' table='[Extract].[FactTable_CB35921C568C42BCB744B12876F02688]' type='table' />
            </properties>
          </object>
          <object caption='Location' id='Location_405F9E56791243118C1A95070DA79C74'>
            <properties context=''>
              <relation connection='excel-direct.0hzfufj1qh173y1dcvlw91beo79s' name='Location' table='[Location$]' type='table'>
                <columns gridOrigin='A1:D157:no:A1:D157:0' header='yes' outcome='6'>
                  <column datatype='string' name='Area Code' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='string' name='Market' ordinal='2' />
                  <column datatype='string' name='Market Size' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Location_405F9E56791243118C1A95070DA79C74' table='[Extract].[Location_405F9E56791243118C1A95070DA79C74]' type='table' />
            </properties>
          </object>
          <object caption='Product' id='Product_3985B3BC7C324A8B8F014FD88CA209D4'>
            <properties context=''>
              <relation connection='excel-direct.0hzfufj1qh173y1dcvlw91beo79s' name='Product' table='[Product$]' type='table'>
                <columns gridOrigin='A1:C14:no:A1:C14:0' header='yes' outcome='6'>
                  <column datatype='integer' name='ProductID' ordinal='0' />
                  <column datatype='string' name='Product' ordinal='1' />
                  <column datatype='string' name='Product Type' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Product_3985B3BC7C324A8B8F014FD88CA209D4' table='[Extract].[Product_3985B3BC7C324A8B8F014FD88CA209D4]' type='table' />
            </properties>
          </object>
          <object caption='StateAbb' id='StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0'>
            <properties context=''>
              <relation connection='excel-direct.0hzfufj1qh173y1dcvlw91beo79s' name='StateAbb' table='[StateAbb$]' type='table'>
                <columns gridOrigin='A1:B53:no:A1:B53:0' header='yes' outcome='6'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Abbreviation' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0' table='[Extract].[StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Area Code]' />
              <expression op='[Area Code (Location)]' />
            </expression>
            <first-end-point guaranteed-value='true' object-id='FactTable_CB35921C568C42BCB744B12876F02688' />
            <second-end-point guaranteed-value='true' object-id='Location_405F9E56791243118C1A95070DA79C74' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[ProductID]' />
              <expression op='[ProductID (Product)]' />
            </expression>
            <first-end-point object-id='FactTable_CB35921C568C42BCB744B12876F02688' />
            <second-end-point object-id='Product_3985B3BC7C324A8B8F014FD88CA209D4' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (StateAbb)]' />
            </expression>
            <first-end-point object-id='Location_405F9E56791243118C1A95070DA79C74' />
            <second-end-point object-id='StateAbb_B30DE07A944C4A6EBCEC318761AEE2B0' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='FilterMapToAll' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='RockingRobinDashboard' type='sheet' worksheet='ProfitMap' />
      <link caption='FilterMapToAll' delimiter=',' escape='\' expression='tsl:RockingRobinDashboard?%5Bfederated.07sep7i1jhvdc61e1wqsp0azkwht%5D.%5BState%5D~s0=&lt;[State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='ProfitMap,Top5Area' />
        <param name='target' value='RockingRobinDashboard' />
      </command>
    </action>
    <action caption='FilterMapArea' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='RockingRobinDashboard' type='sheet' worksheet='ProfitMap' />
      <link caption='FilterMapArea' delimiter=',' escape='\' expression='tsl:RockingRobinDashboard?%5Bfederated.07sep7i1jhvdc61e1wqsp0azkwht%5D.%5BState%5D~s0=&lt;[State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Bar,grossMargin,netMargin,ProfitMap,Top5Product' />
        <param name='on-empty' value='none' />
        <param name='target' value='RockingRobinDashboard' />
      </command>
    </action>
    <action caption='FilterProductToAll' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='RockingRobinDashboard' type='sheet' worksheet='Top5Product' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='RockingRobinDashboard' />
      </command>
    </action>
    <action caption='FilterZoom' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.07sep7i1jhvdc61e1wqsp0azkwht' type='datasource'>
        <exclude-sheet name='Bar' />
        <exclude-sheet name='grossMargin' />
        <exclude-sheet name='netMargin' />
        <exclude-sheet name='Top5Area' />
        <exclude-sheet name='Top5Product' />
      </source>
      <link caption='FilterZoom' delimiter=',' escape='\' expression='tsl:ProfitMap?%5Bfederated.07sep7i1jhvdc61e1wqsp0azkwht%5D.%5BState%5D~s0=&lt;[State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='ProfitMap' />
      </command>
    </action>
    <action caption='FilterArea' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='RockingRobinDashboard' type='sheet' worksheet='Top5Area' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='ProfitMap' />
        <param name='special-fields' value='all' />
        <param name='target' value='RockingRobinDashboard' />
      </command>
    </action>
    <datasources>
      <datasource caption='FactTable+ (RockingRobin)' name='federated.07sep7i1jhvdc61e1wqsp0azkwht' />
    </datasources>
    <datasource-dependencies datasource='federated.07sep7i1jhvdc61e1wqsp0azkwht'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Comparison Bars</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FactTable+ (RockingRobin)' name='federated.07sep7i1jhvdc61e1wqsp0azkwht' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='CompareB' datatype='string' name='[CompareA (copy)_902971782764965897]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
              <aliases>
                <alias key='&quot;Budget COGS&quot;' value='Budget Cost Of Goods' />
                <alias key='&quot;COGS&quot;' value='Cost Of Goods' />
                <alias key='&quot;Marketing&quot;' value='Marketing Cost' />
              </aliases>
            </column>
            <column caption='CompareA' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
              <aliases>
                <alias key='&quot;Budget COGS&quot;' value='Budget Cost Of Goods' />
                <alias key='&quot;COGS&quot;' value='Cost Of Goods' />
                <alias key='&quot;Marketing&quot;' value='Marketing Cost' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.07sep7i1jhvdc61e1wqsp0azkwht'>
            <column datatype='string' default-format='*000' name='[Area Code]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='integer' name='[Budget COGS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Sales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='percentageBar' datatype='real' name='[Calculation_1580763527454572544]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_902971782763782152]/[valueA (copy)_902971782782119946]*100' />
            </column>
            <column caption='A' datatype='integer' name='[Calculation_902971782763782152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 4] &#13;&#10;WHEN &apos;Margin&apos; THEN&#13;&#10;    SUM([Margin])&#13;&#10;WHEN &apos;Sales&apos; THEN&#13;&#10;    SUM([Sales])&#13;&#10;WHEN &apos;Profit&apos; THEN&#13;&#10;    SUM([Profit])&#13;&#10;WHEN &apos;COGS&apos; THEN&#13;&#10;    SUM([COGS])&#13;&#10;WHEN &apos;Marketing&apos; THEN&#13;&#10;    SUM([Marketing])&#13;&#10;WHEN &apos;Total Expenses&apos; THEN&#13;&#10;    SUM([Total Expenses])&#13;&#10;WHEN &apos;Budget COGS&apos; THEN&#13;&#10;    SUM([Budget COGS])&#13;&#10;WHEN &apos;Budget Margin&apos; THEN&#13;&#10;    SUM([Budget Margin]) &#13;&#10;WHEN &apos;Budget Profit&apos; THEN&#13;&#10;    SUM([Budget Profit]) &#13;&#10;ELSE&#13;&#10;    SUM([Budget Sales])&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column caption='Product (Product)' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1580763527454572544]' derivation='User' name='[usr:Calculation_1580763527454572544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_902971782763782152]' derivation='User' name='[usr:Calculation_902971782763782152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[valueA (copy)_902971782782119946]' derivation='User' name='[usr:valueA (copy)_902971782782119946:qk]' pivot='key' type='quantitative' />
            <column caption='B' datatype='integer' name='[valueA (copy)_902971782782119946]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[CompareA (copy)_902971782764965897] &#13;&#10;WHEN &apos;Margin&apos; THEN&#13;&#10;    SUM([Margin])&#13;&#10;WHEN &apos;Sales&apos; THEN&#13;&#10;    SUM([Sales])&#13;&#10;WHEN &apos;Profit&apos; THEN&#13;&#10;    SUM([Profit])&#13;&#10;WHEN &apos;COGS&apos; THEN&#13;&#10;    SUM([COGS])&#13;&#10;WHEN &apos;Marketing&apos; THEN&#13;&#10;    SUM([Marketing])&#13;&#10;WHEN &apos;Total Expenses&apos; THEN&#13;&#10;    SUM([Total Expenses])&#13;&#10;WHEN &apos;Budget COGS&apos; THEN&#13;&#10;    SUM([Budget COGS])&#13;&#10;WHEN &apos;Budget Margin&apos; THEN&#13;&#10;    SUM([Budget Margin]) &#13;&#10;WHEN &apos;Budget Profit&apos; THEN&#13;&#10;    SUM([Budget Profit]) &#13;&#10;ELSE&#13;&#10;    SUM([Budget Sales])&#13;&#10;END' />
            </column>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_902971782763782152:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:valueA (copy)_902971782782119946:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Area Code,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Area Code]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Product (Product))]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1580763527454572544:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[:Measure Names]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1580763527454572544:qk]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Product (Product))]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Area Code,State)]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Multiple Values]' value='64' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[:Measure Names]' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#ddebf0' />
            <format attr='background-color' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Multiple Values]' value='#ddebf0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[:Measure Names]' value='false' />
            <format attr='text-format' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 4]' value='A' />
            <format attr='title' field='[Parameters].[CompareA (copy)_902971782764965897]' value='B' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1580763527454572544:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run>&lt;</run>
                <run>[Parameters].[Parameter 4]</run>
                <run>&gt; is &lt;</run>
                <run>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1580763527454572544:qk]</run>
                <run>&gt;% of &lt;</run>
                <run>[Parameters].[CompareA (copy)_902971782764965897]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.68066298961639404' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Multiple Values]</rows>
        <cols>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[:Measure Names]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[:Measure Names]</field>
                  <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_902971782763782152:qk]&quot;</value>
                <value>819811.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1580763527454572544:qk]</field>
                  <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[:Measure Names]</field>
                  <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>55.244412380665544</value>
                <value>&quot;[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:valueA (copy)_902971782782119946:qk]&quot;</value>
                <value>142771.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{8BEAA8C0-0D7A-4813-BE4E-64B6939A8DE1}' />
    </worksheet>
    <worksheet name='ProfitMap'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profit Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FactTable+ (RockingRobin)' name='federated.07sep7i1jhvdc61e1wqsp0azkwht' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TopBottomStateParam' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.07sep7i1jhvdc61e1wqsp0azkwht'>
            <column datatype='string' name='[Abbreviation]' role='dimension' type='nominal' />
            <column caption='All States' datatype='string' name='[Calculation_467529993153331206]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[State Parameter]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column caption='Product (Product)' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='TopBottomStateCalc' datatype='boolean' name='[TopBottomProductCalc (copy)_612771081616945153]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[State Parameter] = &apos;Bottom 5&apos; THEN&#13;&#10;RANK(SUM([Profit]), &apos;asc&apos;) &lt;= 5 &#13;&#10;ELSEIF [Parameters].[State Parameter] = &apos;Top 5&apos; THEN&#13;&#10;RANK(SUM([Profit]), &apos;desc&apos;) &lt;= 5 ELSE&#13;&#10;RANK(SUM([Profit]), &apos;desc&apos;) &gt; 0&#13;&#10;END'>
                <table-calc ordering-field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Calculation_467529993153331206]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[Abbreviation]' derivation='None' name='[none:Abbreviation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_467529993153331206]' derivation='None' name='[none:Calculation_467529993153331206:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TopBottomProductCalc (copy)_612771081616945153]' derivation='User' name='[usr:TopBottomProductCalc (copy)_612771081616945153:nk:5]' pivot='key' type='nominal'>
              <table-calc ordering-type='Field'>
                <order field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Calculation_467529993153331206]' />
                <order field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Abbreviation]' />
                <order field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[State]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Product (Product))]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Longitude (generated)]' included-values='in-range'>
            <min>-120.5</min>
            <max>-71.489999999999995</max>
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:TopBottomProductCalc (copy)_612771081616945153:nk:5]'>
            <groupfilter function='member' level='[usr:TopBottomProductCalc (copy)_612771081616945153:nk:5]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Longitude (generated)]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:TopBottomProductCalc (copy)_612771081616945153:nk:5]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Product (Product))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Sales:qk]' palette='blue_teal_10_0' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' palette='blue_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' value='Total Profit' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]' value='Year:  '>
              <formatted-text>
                <run fontsize='10'>Year:  </run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[State Parameter]' value='Filter' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' />
              <tooltip column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Marketing:qk]' />
              <tooltip column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Sales:qk]' />
              <text column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Abbreviation:nk]' />
              <lod column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:State:nk]' />
              <lod column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' />
              <lod column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Calculation_467529993153331206:nk]' />
              <geometry column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:State:nk]>
]]></run>
                <run fontcolor='#787878'>Profit:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[$ <[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]> k]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[$ <[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Sales:qk]>   k]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Marketing Cost: </run>
                <run bold='true' fontcolor='#000000'><![CDATA[$ <[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Marketing:qk]>  k]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#1b1b1b' fontsize='6'>&lt;</run>
                <run bold='true' fontcolor='#1b1b1b' fontsize='6'>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Abbreviation:nk]</run>
                <run bold='true' fontcolor='#1b1b1b' fontsize='6'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Latitude (generated)]</rows>
        <cols>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{031F89E9-D194-44AB-8198-D5FEFE1A963B}' />
    </worksheet>
    <worksheet name='Top5Area'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Top 5 profits by areas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FactTable+ (RockingRobin)' name='federated.07sep7i1jhvdc61e1wqsp0azkwht' />
          </datasources>
          <datasource-dependencies datasource='federated.07sep7i1jhvdc61e1wqsp0azkwht'>
            <column datatype='string' default-format='*000' name='[Area Code]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Index' datatype='integer' name='[Calculation_467529993097342976]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column caption='Product (Product)' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Market Size]' derivation='Attribute' name='[attr:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Area Code]' derivation='None' name='[none:Area Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_467529993097342976]' derivation='User' name='[usr:Calculation_467529993097342976:qk:3]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Area Code]' ordering-type='Field'>
                <order field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:State:nk]' />
                <order field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Area Code]' />
                <sort direction='DESC' using='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Product (Product))]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]'>
            <groupfilter function='empty-level' member='[State]' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:State:nk]' direction='DESC' using='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' />
          <filter class='quantitative' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_467529993097342976:qk:3]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <slices>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_467529993097342976:qk:3]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Product (Product))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' />
              <tooltip column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Marketing:qk]' />
              <tooltip column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Sales:qk]' />
              <tooltip column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' />
              <text column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:State:nk]' />
              <text column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Area Code:nk]' />
              <color column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Market Size:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Area Code: </run>
                <run bold='true'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Area Code:nk]>]]></run>
                <run>&#10;Market Size: </run>
                <run bold='true'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Market Size:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales: $</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Sales:qk]>]]></run>
                <run bold='true' fontcolor='#787878'>k</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit: $</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]>]]></run>
                <run>k&#10;</run>
                <run fontcolor='#787878'>Marketing Cost: $</run>
                <run bold='true'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Marketing:qk]>]]></run>
                <run>k&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Area Code:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{507BFCDC-78D6-4718-9890-EE7C3E8326CE}' />
    </worksheet>
    <worksheet name='Top5Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;</run>
            <run bold='true' fontsize='12'>[Parameters].[Parameter 2]</run>
            <run bold='true' fontsize='12'>&gt; selling items ordered by total sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FactTable+ (RockingRobin)' name='federated.07sep7i1jhvdc61e1wqsp0azkwht' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TopBottomProductParam' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bottom 5&quot;'>
              <calculation class='tableau' formula='&quot;Bottom 5&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.07sep7i1jhvdc61e1wqsp0azkwht'>
            <column datatype='string' default-format='*000' name='[Area Code]' role='dimension' semantic-role='' type='nominal' />
            <column caption='TopBottomProductCalc' datatype='boolean' name='[Calculation_1089026742058356740]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &apos;Bottom 5&apos; THEN&#13;&#10;RANK(SUM([Sales]), &apos;asc&apos;) &lt;= 5 &#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;Top 5&apos; THEN&#13;&#10;RANK(SUM([Sales]), &apos;desc&apos;) &lt;= 5 &#13;&#10;ELSE RANK(SUM([Sales]), &apos;desc&apos;) &gt; 0 &#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product (Product)' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Product Type]' derivation='Attribute' name='[attr:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1089026742058356740]' derivation='User' name='[usr:Calculation_1089026742058356740:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Area Code,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Area Code]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1089026742058356740:nk]'>
            <groupfilter function='member' level='[usr:Calculation_1089026742058356740:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Product:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1089026742058356740:nk]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Area Code,State)]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Sales:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9f3ef' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#f9f3ef' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Product Type:nk]' value='Product Type' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='border-color' value='#a0cbe8' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Product Type:nk]' />
              <tooltip column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Product (Product): </run>
                <run bold='true'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Product:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Product Type: </run>
                <run bold='true'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Product Type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit:&#9;</run>
                <run bold='true' fontcolor='#787878'>$ </run>
                <run bold='true'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]> k]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true' fontcolor='#787878'>$ </run>
                <run bold='true'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Sales:qk]> k]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Product:nk]</rows>
        <cols>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{4759409D-C125-4452-AE74-AE179C7BB9D6}' />
    </worksheet>
    <worksheet name='grossMargin'>
      <table>
        <view>
          <datasources>
            <datasource caption='FactTable+ (RockingRobin)' name='federated.07sep7i1jhvdc61e1wqsp0azkwht' />
          </datasources>
          <datasource-dependencies datasource='federated.07sep7i1jhvdc61e1wqsp0azkwht'>
            <column datatype='string' default-format='*000' name='[Area Code]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Product (Product)' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='grossProfitMargin' datatype='real' name='[grossProfitMargin (copy)_1526720332457025537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Sales])-SUM([COGS]))/SUM([Sales])*100' />
            </column>
            <column-instance column='[grossProfitMargin (copy)_1526720332457025537]' derivation='User' name='[usr:grossProfitMargin (copy)_1526720332457025537:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Area Code,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Area Code]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Product (Product))]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Product (Product))]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Area Code,State)]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='height' value='40' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:grossProfitMargin (copy)_1526720332457025537:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>grossProfitMargin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:grossProfitMargin (copy)_1526720332457025537:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10'>Gross  Margin:</run>
                <run bold='true' fontsize='12'>Æ  </run>
                <run><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:grossProfitMargin (copy)_1526720332457025537:qk]> %]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{55105C1D-D63A-4E63-B95E-6883664184A3}' />
    </worksheet>
    <worksheet name='netMargin'>
      <table>
        <view>
          <datasources>
            <datasource caption='FactTable+ (RockingRobin)' name='federated.07sep7i1jhvdc61e1wqsp0azkwht' />
          </datasources>
          <datasource-dependencies datasource='federated.07sep7i1jhvdc61e1wqsp0azkwht'>
            <column datatype='string' default-format='*000' name='[Area Code]' role='dimension' semantic-role='' type='nominal' />
            <column caption='netProfitMargin1' datatype='real' name='[Calculation_1526720332454821888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])*100' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Product (Product)' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1526720332454821888]' derivation='User' name='[usr:Calculation_1526720332454821888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Area Code,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Area Code]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Product (Product))]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Product (Product))]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (Area Code,State)]</column>
            <column>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1526720332454821888:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>netProfitMargin1:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1526720332454821888:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10'>Profit Margin:</run>
                <run bold='true' fontsize='12'>Æ  </run>
                <run><![CDATA[<[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1526720332454821888:qk]> %]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{D4A8B9C9-9C49-49E5-BD14-7337A59921D8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='RockingRobinDashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='FactTable+ (RockingRobin)' name='federated.07sep7i1jhvdc61e1wqsp0azkwht' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='CompareB' datatype='string' name='[CompareA (copy)_902971782764965897]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
          <aliases>
            <alias key='&quot;Budget COGS&quot;' value='Budget Cost Of Goods' />
            <alias key='&quot;COGS&quot;' value='Cost Of Goods' />
            <alias key='&quot;Marketing&quot;' value='Marketing Cost' />
          </aliases>
          <members>
            <member value='&quot;Sales&quot;' />
            <member value='&quot;Profit&quot;' />
            <member value='&quot;Margin&quot;' />
            <member alias='Cost Of Goods' value='&quot;COGS&quot;' />
            <member alias='Marketing Cost' value='&quot;Marketing&quot;' />
            <member value='&quot;Total Expenses&quot;' />
            <member alias='Budget Cost Of Goods' value='&quot;Budget COGS&quot;' />
            <member value='&quot;Budget Margin&quot;' />
            <member value='&quot;Budget Profit&quot;' />
            <member value='&quot;Budget Sales&quot;' />
          </members>
        </column>
        <column caption='TopBottomProductParam' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bottom 5&quot;'>
          <calculation class='tableau' formula='&quot;Bottom 5&quot;' />
          <members>
            <member value='&quot;All&quot;' />
            <member value='&quot;Top 5&quot;' />
            <member value='&quot;Bottom 5&quot;' />
          </members>
        </column>
        <column caption='CompareA' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
          <aliases>
            <alias key='&quot;Budget COGS&quot;' value='Budget Cost Of Goods' />
            <alias key='&quot;COGS&quot;' value='Cost Of Goods' />
            <alias key='&quot;Marketing&quot;' value='Marketing Cost' />
          </aliases>
          <members>
            <member value='&quot;Sales&quot;' />
            <member value='&quot;Profit&quot;' />
            <member value='&quot;Margin&quot;' />
            <member alias='Cost Of Goods' value='&quot;COGS&quot;' />
            <member alias='Marketing Cost' value='&quot;Marketing&quot;' />
            <member value='&quot;Total Expenses&quot;' />
            <member alias='Budget Cost Of Goods' value='&quot;Budget COGS&quot;' />
            <member value='&quot;Budget Margin&quot;' />
            <member value='&quot;Budget Profit&quot;' />
            <member value='&quot;Budget Sales&quot;' />
          </members>
        </column>
        <column caption='TopBottomStateParam' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <members>
            <member value='&quot;All&quot;' />
            <member value='&quot;Top 5&quot;' />
            <member value='&quot;Bottom 5&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.07sep7i1jhvdc61e1wqsp0azkwht'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='113' param='horz' w='98000' x='1000' y='9667'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='111' param='horz' w='98000' x='1000' y='9667'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='107' param='horz' w='98000' x='1000' y='9667'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='102' param='horz' w='98000' x='1000' y='9667'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='97' param='horz' w='98000' x='1000' y='9667'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='89' param='horz' w='98000' x='1000' y='9667'>
                      <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='84' param='horz' w='98000' x='1000' y='9667'>
                        <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='82' param='horz' w='98000' x='1000' y='9667'>
                          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='74' param='horz' w='98000' x='1000' y='9667'>
                            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='72' param='horz' w='98000' x='1000' y='9667'>
                              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='52' param='horz' w='98000' x='1000' y='9667'>
                                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='43' param='horz' w='98000' x='1000' y='9667'>
                                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='37' param='horz' w='98000' x='1000' y='9667'>
                                    <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='32' param='horz' w='98000' x='1000' y='9667'>
                                      <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='29' param='horz' w='98000' x='1000' y='9667'>
                                        <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='25' param='horz' w='98000' x='1000' y='9667'>
                                          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='15' param='horz' w='98000' x='1000' y='9667'>
                                            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89000' id='7' param='horz' w='98000' x='1000' y='9667'>
                                              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='89000' id='5' w='98000' x='1000' y='9667'>
                                                <zone h='48464' id='3' name='ProfitMap' show-title='false' w='68375' x='1000' y='9667'>
                                                  <zone-style>
                                                    <format attr='border-color' value='#000000' />
                                                    <format attr='border-style' value='none' />
                                                    <format attr='border-width' value='0' />
                                                    <format attr='margin' value='4' />
                                                  </zone-style>
                                                </zone>
                                                <zone h='40536' id='80' name='Top5Product' w='82875' x='1000' y='58131'>
                                                  <zone-style>
                                                    <format attr='border-color' value='#000000' />
                                                    <format attr='border-style' value='none' />
                                                    <format attr='border-width' value='0' />
                                                    <format attr='margin' value='0' />
                                                    <format attr='margin-top' value='2' />
                                                    <format attr='background-color' value='#f9f3ef' />
                                                  </zone-style>
                                                </zone>
                                                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='40536' id='86' mode='compact' param='[Parameters].[Parameter 2]' w='15125' x='83875' y='58131'>
                                                  <formatted-text>
                                                    <run>Filter:</run>
                                                  </formatted-text>
                                                  <zone-style>
                                                    <format attr='border-color' value='#000000' />
                                                    <format attr='border-style' value='none' />
                                                    <format attr='border-width' value='0' />
                                                    <format attr='margin' value='0' />
                                                    <format attr='margin-top' value='2' />
                                                    <format attr='background-color' value='#f9f3ef' />
                                                  </zone-style>
                                                </zone>
                                                <zone h='44501' id='100' name='Bar' w='29625' x='69375' y='9667'>
                                                  <zone-style>
                                                    <format attr='border-color' value='#000000' />
                                                    <format attr='border-style' value='none' />
                                                    <format attr='border-width' value='0' />
                                                    <format attr='margin' value='0' />
                                                    <format attr='background-color' value='#ddebf0' />
                                                  </zone-style>
                                                </zone>
                                                <zone _.fcp.SetMembershipControl.false...type='empty' _.fcp.SetMembershipControl.true...type-v2='empty' h='3963' id='105' w='29625' x='69375' y='54168'>
                                                  <zone-style>
                                                    <format attr='border-color' value='#000000' />
                                                    <format attr='border-style' value='none' />
                                                    <format attr='border-width' value='0' />
                                                    <format attr='margin' value='0' />
                                                    <format attr='background-color' value='#ddebf0' />
                                                  </zone-style>
                                                </zone>
                                              </zone>
                                            </zone>
                                          </zone>
                                        </zone>
                                      </zone>
                                    </zone>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='8334' id='116' name='netMargin' show-title='false' w='13875' x='85125' y='1333'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
            </zone-style>
          </zone>
          <zone h='8334' id='117' name='grossMargin' show-title='false' w='15750' x='69375' y='1333'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='8334' id='108' mode='compact' param='[Parameters].[State Parameter]' w='16375' x='53000' y='1333'>
            <formatted-text>
              <run>Filter:</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8334' id='114' mode='dropdown' name='ProfitMap' param='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]' values='database' w='18000' x='35000' y='1333'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='8334' id='118' w='34000' x='1000' y='1333'>
            <formatted-text>
              <run bold='true' fontsize='14'>Profit Map</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9500' id='75' name='ProfitMap' pane-specification-id='1' param='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' w='9625' x='57375' y='40500' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='25000' id='85' name='Top5Product' pane-specification-id='1' param='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Product Type:nk]' w='13500' x='85250' y='66167'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ddebf0' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='3667' id='103' mode='compact' param='[Parameters].[Parameter 4]' show-title='false' w='9000' x='78500' y='53500'>
          <formatted-text>
            <run>A</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='4333' id='104' mode='compact' param='[Parameters].[CompareA (copy)_902971782764965897]' show-title='false' w='9375' x='89500' y='53500'>
          <formatted-text>
            <run>B</run>
          </formatted-text>
        </zone>
        <zone h='22167' id='119' name='Top5Area' show-title='false' w='18125' x='52875' y='37500' />
      </zones>
      <simple-id uuid='{94ACC832-8827-486E-9D61-A6408015D88C}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='ProfitMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='115' type='filters' />
            <card size='288' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[sum:Profit:qk]' type='color' />
            <card custom-title='true' mode='compact' param='[Parameters].[State Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Top 5 states (copy)]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Top n by parameter Set]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Abbreviation:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Area Code (Location):nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Area Code:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Calculation_467529993153331206:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Calculation_85568449284120577:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Calculation_85568449291247618:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Calculation_85568449357447171:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Calculation_902971782698938370:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:State:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:TopBottomProductCalc (copy)_612771081616945153:nk:1]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F4C05DCE-2FF3-4322-A8B2-AD714016A960}' />
    </window>
    <window class='worksheet' name='Top5Area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Market Size:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Area Code (Location):nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Area Code:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Market Size:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_467529993097342976:ok:9]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_467529993097342976:ok]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C09DE98D-CFC8-4B5B-9D82-95381DC493AC}' />
    </window>
    <window class='worksheet' name='Top5Product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 2]' show-title='false' type='parameter' />
            <card pane-specification-id='1' param='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Product Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Top5ProductSet (copy)]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[Top5ProductSet]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Product Type:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Product Type:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[none:Product:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1089026742058356740:nk]</field>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{AD830332-FCDE-44F7-9E37-F44E0FA53B95}' />
    </window>
    <window class='worksheet' name='Bar'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='31' type='pages' />
            <card size='163' type='filters' />
            <card size='29' type='measures' />
            <card size='174' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card custom-title='true' mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
            <card custom-title='true' mode='compact' param='[Parameters].[CompareA (copy)_902971782764965897]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:valueA (copy)_902971782782119946:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD61A779-2E68-4C52-96AA-6C41696E7E8A}' />
    </window>
    <window class='worksheet' name='netMargin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.07sep7i1jhvdc61e1wqsp0azkwht].[usr:Calculation_1526720332454821888:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>31.658882352151895</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{03383F1F-7480-4F2E-87AA-A3379114CB7B}' />
    </window>
    <window class='worksheet' name='grossMargin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{15982A76-8EDF-4D88-9929-C758D6D691CC}' />
    </window>
    <window class='dashboard' maximized='true' name='RockingRobinDashboard'>
      <viewpoints>
        <viewpoint name='Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='ProfitMap'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='Top5Area'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='Top5Product'>
          <zoom type='entire-view' />
          <highlight field='[federated.07sep7i1jhvdc61e1wqsp0azkwht].[attr:Product Type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='grossMargin'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='netMargin'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='100' />
      <simple-id uuid='{454BDBC7-DFDF-44E5-AC19-CD8856C59C24}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Bar' width='320'>
      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
    </thumbnail>
    <thumbnail height='384' name='ProfitMap' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='RockingRobinDashboard' width='384'>
      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
      8s143d3d7Nq1i6mpKc6dO6dfX75pp5w+s5U6NNcaRsR3M+bPvW9aAl4ymdQl9HQ6rUdaCYKg
      lz4xuoZSkGV5WcbwZvcI0VAbq7gBURRpampESK+U6lVVJXT1FKnFKaKTl4gnEiRiURoG9q84
      trFvmOuvHaFx5F7iY69gb9vO9PnjZNIJMrFFFgPVqf7FnnM2myUajZZd96Oc76pFJQRrtfOU
      i1yiYxSRkWtOWY/Kp2uJQs9MI/4Oh2OZXb8YNOlRKysQjUb1CKJ8WCwWRkZG6Ozs5PTp00xM
      TKywUWuRR6VKWuRfQ/58xfZO7ndaX4dqn1cle3Q99rJ2v7SS85rTV5Zlrl+/ztWrV/XQXlVd
      ShLUnk++idcI+UKcdnx+IbjNQk0xAIDGhga6bMY2ssaRuzC5G1Gmz+M0KTT2DBmOIbm66N9/
      Jy2NLjqG7qBv+1bs7Tu5/cGPcsdjn0JSVlc8zWhtLS0tAIRCoWXNcCqRtm4F4peLSteZfz+K
      aTbrJaFWM2Y5mpj2UjudTl0SL1fq13pdaN3jSuUB+Hw+9u9fEnyOHTtGJBJZZuPXTFDlEMxC
      knghopb/uVaMsFYk2kphtVoxm816eQdt342Pj9Pd3Y3D4dDLOY+PjyPLMvPz821VRwUAACAA
      SURBVPj9/mXjlHuv4aaJsBZQE05gDdqL0+KyMp3MIpjMy75Tsmmio2fo7t2K3LadrLu5gF1e
      YuiuDwPQvfd+ANwDOwEwNWxhPXivoijY7XasViuRSAS3272inIURjF603MiN3M8qOW8j1Or1
      nmOtHdjroWlp0HpdaJ8pilK0pINmEtCidlRVxWaz6fHnpa5bFEW6u7v1aCFJkhgaGloWclgo
      8KDQNVR6zdq1lKvpaOdX+0yN3qXVCAqa3V9z+mrvayAQ0LWCtrY2/H4/7e3tOlNVVZWrV6/i
      crmWEfJi72sutCTAWkDNsW1BEPA6LAjT75H0zyz7TrI6ad73IGw7hORurpmbqEEjWLmJQKVQ
      SkostME32qy0GViNozC/RHa198PoXuZLzRaLRSf+qqqSSqVQFIWrV68yOja27FzN5KP9aNUk
      YcnEU+k6LRYLu3btorOzk3fffZfp6Wl9nlKodH8WOl5LSitnnFKaXykYmQ9LoZBJVIvXj0aj
      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
    </thumbnail>
    <thumbnail height='384' name='Top5Area' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Top5Product' width='384'>
      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
      sKsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='grossMargin' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMiElEQVR4nO3aW4hW9b/H8c+MjnNyHGvK0fCERVSTiZoaXghDIASZIggRhBFRBAUm4U10
      IC+8rOgAUWEXQUQFFYGUpFgJFWVhaEZjjFmWTRROjTOOOvO/+LMH/nTY+yJs7/19vS7X+jHr
      yzPwvJ+1fqthfHx8PACU0/hPDwDAP0MAAIoSAICiBACgKAEAKGryn504c+ZMhoeHz+UsAJxD
      fxqAkydPpr+/P21tbedyHgDOkT8NQJK0t7dn1qxZ52oWAM4hewAARQkAQFECAFCUAAAUJQAA
      RQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCU
      AAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkA
      QFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAU
      JQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFEC
      AFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAA
      RQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCU
      AAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkA
      QFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAU
      JQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFEC
      AFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAA
      RQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCU
      AAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkA
      QFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAUNLY2FhGRkYyPDyc0dHRjI+Pn/MZTp8+
      neHh4Zw+ffoPj585c+Zvu9aZM2dyxx135N133504Nvlv++sA/0d88803ef755/PNN9+koaEh
      LS0t2bBhQ1atWnVO53jppZfy7LPP5oYbbsimTZvS2NiY8fHxbNu2Lbt3786mTZuydu3av+Va
      jY2NufHGG3PxxRdPHBMAoJSTJ09m69at6e3tzb333puWlpYMDAxkZGQkSXLw4MG0tbWls7Mz
      n3/+eVauXJlJkyalv78/fX19mTlzZnp6eia+rL/77rt8+eWXaWpqyqJFi9LZ2ZnBwcF8+umn
      OXPmTC699NLMnj07DQ0NfzjPokWLcvjw4QwNDaWjoyO//vprjh07lsWLF0+sOX36dA4cOJCB
      gYF0dnZm8eLFaWpqyvDwcD755JMsX748hw4dSnt7exYsWJAjR46kr68vXV1daW1tzfz589PS
      0pKWlpa0tbVlfHw8+/fvz6SHHnrooT8a6tSpUzl58mQ6Ojr+/v8AwD9k7969OXjwYDZv3pzW
      1tY0NDRk6tSpmT59epJk+/btOXr0aF588cW89957WbNmTXbu3JlnnnkmHR0d2bFjR44ePZol
      S5akr68v999/f6ZNm5Zjx45l37596enpyZYtWzIyMpJTp05l586dWbp0aVpaWn43y/79+5P8
      +3HUnDlz0t3dnX379uW3335LU1NTuru7c9lll+XNN9/M+++/n4aGhuzatStfffVVli9fnp9+
      +ilbt27N2NhYHn/88Zx//vk5duxYHn300UybNi2HDx/Oc889l9WrV6e9vT0PPvhgLrvssnR3
      d+epp55yBwDUcvTo0Vx00UVpbm7O8ePH8+STTyZJent709vbmyTZvXt3NmzYkDVr1uTUqVN5
      9dVXs3nz5vT09OTnn3/OXXfdleuuuy79/f3p6urK+vXr09XVlST5/vvv88svv2TNmjW55JJL
      0tj411utTU1NWbZsWT744IMsXLgwH330UVauXJldu3ZNrFmzZk2uvvrqDAwMpKurK6+88srE
      /sCJEyfy2Wef5ZFHHkl3d3c2bdqUu+++OytWrMgPP/yQPXv2/Om1bQIDpUyZMiWnTp3K+Ph4
      zjvvvNxyyy1pbm5Of3//xJpVq1Zl/fr1aW5uzsmTJzMyMpKZM2cmSc4777xMnTo1AwMDueaa
      a3LhhRdm06ZNueeee/Lpp5+mu7s7119/fbZt25bbb789r7/+esbGxv5ypiVLlmT//v0ZHBzM
      0aNHc/nll0+cGx8fz2uvvZYHHnggb731Vj7++OMMDQ3l7NmzSZK2trbcddddWbBgwcSm9ty5
      c/9Hn4UAAKUsXbo0fX19+fbbb9PU1JQFCxaks7PzP9Z0dXVN/HJvbm7OpEmTMjg4mCQZGhrK
      0NBQpk2bltbW1tx3333Zvn171q1bl8ceeyyDg4O56aab8txzz+WBBx7Iyy+/nC+++OIvZ5oz
      Z06ampqya9euzJgxI9OmTZs4Nzw8nB07dmTz5s3ZsmVLNm7cmClTpkycnzJlysT8ra2taW9v
      z6FDhzI2NpahoaG/fLvJIyCglIsvvji9vb3ZunVr1q1bl46Ojnz99de56qqr/nB9Z2dnent7
      88QTT2Tt2rXZu3dvLr300syfPz979uxJX19fenp60t/fn+nTp+fHH3/M008/nRUrVmR0dDSN
      jY3/7V7q5MmTs2zZsrzwwgu58847/+OxUVNTU7q6urJnz54cO3YsH3744e9eG/0vra2tuemm
      m/Lss89mx44daW1t/ctXSW0CA6U0NDRk0aJFmTt3bg4dOpTjx49n2bJlWb16dZqbmzM6OprZ
      s2dn1qxZE+t7enrS3t6eAwcO5JJLLsnNN9+clpaWzJgxI4ODg/nyyy/T1taWW2+9NbNmzUpb
      W1sOHDiQEydOZOPGjVmwYMEfvgV0+vTpXHDBBZk/f34uvPDCjI2N5dprr01ra2tGR0czd+7c
      zJw5M1deeWWOHDmSs2fPTmzoLly4MA0NDRkfH8/ChQszefK/f8/Pmzcvvb29Wb58ea688srs
      2bMn69atS0tLS0ZGRnLFFVeko6Mjo6OjaRj/k/uDwcHBDAwMTHwIAPzvdvbs2bz99tvp7u5O
      W1tb3njjjZw4cSIPP/xwJk2a9Lv1HgEB/D/R2NiYGTNm5J133snQ0FDmzZuX22677Q+//JO4
      AwCoyltAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJ
      AEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAA
      FCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBR
      AgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUA
      AEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQ
      lAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJ
      AEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAA
      FCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBR
      AgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUA
      AEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQ
      lAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJ
      AEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAA
      FCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBR/wIOvXKoqnWocQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='netMargin' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMlUlEQVR4nO3cWYyd5X3H8d8Zz+Lx2DMej3fjNSYGY+MYU0NCEtlJ2FSD2gCtVKeLGpo2
      QumiqIqqKCq5SJsIRUqkiCRVmkq0uYAqJBXQCjeQGIhZGzsxxqxmMTvYxh4845k5ntML6LQu
      hlQpdUT/n8/F0eh9nvO8zzsX56vznpnTaLVarQBQTtsvewMA/HIIAEBRAgBQlAAAFCUAAEW1
      v9lAs9nM8PDwidwLACfQmwZgaGgou/c8kWZn94ncDwAnyJsGIEmand0Z7pt7ovYCwAnkMwCA
      ogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChK
      AACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQA
      oCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACK
      EgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgB
      AChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCA
      ogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChK
      AACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQA
      oCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACK
      EgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgB
      AChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCA
      ogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChKAACKEgCAogQAoCgBAChK
      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
      pX/8mbR3HOevj17nHQBAUb4LCKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAo
      SgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIE
      AKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAA
      ihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAo
      AQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIA
      gKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAo
      SgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIE
      AKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAA
      ihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAo
      AQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIA
      gKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAo
      SgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIE
      AKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAo6t8ByIha5m4p4iIAAAAASUVO
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
